const { SlashCommandBuilder } = require('discord.js');
const fs = require('fs');

const dataFile = './data.json';
const minBet = 2000;

module.exports = {
    data: new SlashCommandBuilder()
        .setName('taixiu')
        .setDescription('Ch∆°i tr√≤ t√†i x·ªâu v·ªõi 3 x√∫c x·∫Øc!')
        .addIntegerOption(option => 
            option.setName('bet')
            .setDescription('S·ªë ti·ªÅn b·∫°n mu·ªën c∆∞·ª£c')
            .setRequired(true)
        )
        .addStringOption(option => 
            option.setName('choice')
            .setDescription('Ch·ªçn "t√†i" ho·∫∑c "x·ªâu"')
            .setRequired(true)
            .addChoices(
                { name: 'T√†i', value: 'tai' },
                { name: 'X·ªâu', value: 'xiu' }
            )
        ),

    async execute(interaction) {
        const userId = interaction.user.id;
        const bet = interaction.options.getInteger('bet');
        const choice = interaction.options.getString('choice');

        // ƒê·ªçc d·ªØ li·ªáu
        let data = JSON.parse(fs.readFileSync(dataFile, 'utf8'));
        if (!data[userId]) {
            data[userId] = { balance: 10000 }; // M·∫∑c ƒë·ªãnh c√≥ 10,000 khi ch∆∞a c√≥ t√†i kho·∫£n
        }

        if (bet < minBet) {
            return interaction.reply(`‚ö†Ô∏è B·∫°n ph·∫£i c∆∞·ª£c √≠t nh·∫•t **${minBet}** ti·ªÅn!`);
        }
        
        if (data[userId].balance < bet) {
            return interaction.reply('‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ c∆∞·ª£c!');
        }

        // Tung 3 x√∫c x·∫Øc
        const dice1 = Math.floor(Math.random() * 6) + 1;
        const dice2 = Math.floor(Math.random() * 6) + 1;
        const dice3 = Math.floor(Math.random() * 6) + 1;
        const total = dice1 + dice2 + dice3;

        const result = total <= 10 ? 'xiu' : 'tai';
        const resultText = result === 'xiu' ? 'X·ªâu üé≤' : 'T√†i üé≤';

        let message = `üé≤ K·∫øt qu·∫£: **${dice1} + ${dice2} + ${dice3} = ${total}** ‚Üí **${resultText}**\n`;

        // Ki·ªÉm tra th·∫Øng / thua
        if (choice === result) {
            const winnings = bet * 2;
            data[userId].balance += bet;
            message += `‚úÖ B·∫°n ƒë√£ th·∫Øng! Nh·∫≠n ƒë∆∞·ª£c **${winnings}** ti·ªÅn.\nüí∞ S·ªë d∆∞ m·ªõi: **${data[userId].balance}**`;
        } else {
            data[userId].balance -= bet;
            message += `‚ùå B·∫°n ƒë√£ thua! M·∫•t **${bet}** ti·ªÅn.\nüí∞ S·ªë d∆∞ m·ªõi: **${data[userId].balance}**`;
        }

        // L∆∞u l·∫°i d·ªØ li·ªáu
        fs.writeFileSync(dataFile, JSON.stringify(data, null, 2));

        return interaction.reply(message);
    }
};
